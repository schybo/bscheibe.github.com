Blog Title: Hosting Websites for ....
One day I wanted to create a website, a blog of sorts but with some extras. I didn't want to use wordpress, blogspot, or anyother site with their sponsorship logo at the end of your site url. I wanted this site to be completely in my control, to have no limitations in what I could do with it. But how to go about doing this? I knew some basic html and css code that I had learned in high school, but my learning didn't get much further than that. How did people actually get the sites online? Did they have to own a server? Multiple questions raced through my head and I was confused. Luckily for me I got some very helpful advice from my brother. If not I probably would have run into some costly mistakes. For one thing you don't need to own a server to get your websites running. There's a much simpler way, which will save you time, money, and most likely a lot of frustration. 
Now to start off I mentioned I knew basic html and css. If your thinking right now that you probably shouldn't read anymore because that you don't even know that, don't worry this write up will help out with that too. First and foremost we're going to going to get the site up and running though, and to do that you'll need a domain name. This is the easiest part (or maybe that hardest depending on if you think the hardest part of teamwork is creating a team name), all you need to do is simply head to one of the variety of sites selling domain names and purchase your sites domain name. Most of you will probably head to GoDaddy.com because they're advertising seems to have gone through the roof in the past little while. I picked Domainsite.com to purchase mine, but again any site should be fine, and prices for the domain name should be approximately $10. After purchasing you now own your very own piece of the internet, pretty spiffy eh? But you think, what good is it if all it displays are those dreaded ads that appear when you accidently type giogle.com. Here's where hosting comes into play and also where things get a little bit trickier. There's a few ways to do this, but if you were like me and had no idea how to really and truly get a site up and running, all while under your control and knowledge, this is your best bet. What is your best bet you ask? Git is. Git? What's Git? A Western cowboy talking to his horse? A breakfast replacement for Wheaties? I'm not going to try and define it, as I'd probably get attacked by countless numbers who feel it is their job on earth to show they are better than everybody. But for the rest of us peasants all you really need to know is that Git is a way to get your site up and running own your domain name that you just purchased. For those who want to revolt against the high and mighty here's a link to the Git site where you can train to fight mightly on the fields of justice <a> http://git-scm.com/book </a>. Yah, there not getting any better are they. I'll keep practicing. For me I found the site a bit to stuffy, it had too much crap in there I really did not need to know to get my site running. The site made me confused and scared, did I really need to know all this stuff to get a simple site working? No, you don't. That's probably the main reason I made this post is to cut through all the crap and give you the most basic steps you need to get your site operationg
First things first, head to <a> https://github.com/ </a> and create an account. This is fairly easy and much like creating an account on any other site. However be sure to remember your username and password because you'll be needing it to get your site working. Once you've signed in, they'll be a link labelled "Set Up Git", click on it. Once the page transfers it will ask you to download Git. Do so. If you have a Mac it might say something about a "native app". Skip that and look below for the dowload link. Once you have it install you may try to open the program up. Git is a program isn't it? I mean I downloaded just like any other program I would to my computer. That's sure as hell what I thought when I downloaded it. I spent a good while trying to unistall and reinstall this thing to no avail. Thankfully this is where that I advice I got came to the rescue. Git doesn't actually have a UI. Most of us these days are so use to having a pretty screen with gradiented buttons and well designed toolbar pop up when we run a program, we don't actually think about what program made that pretty screen with gradiented buttons and well designed toolbar. So here's the shocker and probably the most confusing part of the whole process as well, Git runs from the command line. Command line? You mean that thing I may have used once in my entire computer career to fix a virus on my computer? That command line? The thing with the non-existent UI? Yes that command line, and like it not that's what we'll be using. And if you were like me before I started messing around with Linux based computers, I thought command line was a "bad place" on the computer. A place you didn't want to go to becuase one wrong move could erase your hard drive and blow up your computer at the same time. Well you've probably been watching to too much Hollywood because that stuff won't happen. The erasing the hard drive is possible, but the possibility of this happening is almost nonexistant if you follow the steps correctly. Also if your running either Windows or Mac they have some safety measures in place so that this won't happen. 

PART 2

Before we head to the terminal however and start destroying your hard drive we need to create a folder in your home drive for your website. Creating one where your other documents are is probably best, and let's simply name it 'Website'. Inside the website folder, open a new text document through one of the many word processor and either write some html code that will display something on the screen, or for those who are new to html (or just really really lazy) copy the following line. <!DOCTYPE html><html><head> My Site </head><body><p> Hello World </p></body></html>. This will display the classic "Hello World" in your browser if you open it up. Now that we have a serious webpage to display online let's return back to our friend the terminal. Open up that black screen of death and change the directory to where your 'Website' folder is located. How do you that you ask? Start by typing cd (stands for 'change directory') followed by a space and then the address of where your 'Website' folder is located. Address you ask? You can find the address of the file a few different ways, but since the best way to get rid of the fear is to face it, were going to use the terminal to help us in this task. Now think back to when you created the 'Website' folder. I suggested you put it in your documents folder, so begin typing in the name of your documents folder into the command line. After just type in '\Website' so that your whole line should look roughly like this 'cd Documents\Website' and hit enter. This will change the directory that is being focused on by the terminal to the one holding your website. If you had stored your 'Website' folder in your massive porn folder for example, just replace your the Documents part of the adress to indicate this. Now the next few lines are not going to be pretty. I'm going to state commands one after another and your going to copy them into the terminal. One line is going to be one command (minus the period at the end). However if your bemoaning the fact that you won't be able to read about 90% of my bad sarcasm for 10% of actual useful information, I'll be sure to include some of that at the bottom of the post. Here we go. git config --global user.name "Enteruniqueusernamehere". git config --global user.email enteruniqueemailaddressherewithnobrackets.